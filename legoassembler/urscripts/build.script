$$ADDITIONS$$

$$SOCKET$$

def get_param(msg):
    socket_send_line(msg)
    data = socket_read_ascii_float(1)
    if data[0] == 0:
        popup("Failed to receive parameter")
        halt
    end
    return data[1]
end

def get_next_pose(msg):
    socket_send_line(msg)
    data = socket_read_ascii_float(6)
    if data[0] == 0:
        popup("Failed to receive pose")
        halt
    end
    pose = p[data[1],data[2],data[3],data[4],data[5],data[6]]
    return pose
end

def movel_to_travel_z(z, vel):
    # Move linearly to z height from current pose
    pose = get_actual_tcp_pose()
    pose[2] = z
    movel(pose, v=vel)
end

def movej_to_pose_at_set_z(pose, z, vel):
    new_p = p[pose[0],pose[1],z,pose[3],pose[4],pose[5]]
    movej(new_p, v=vel)
end

# Wait time between actions
wtime = get_param("wait_time")

# Travel height for TCP
travel_z = get_param("travel_z")

# TCP velocity
vel = get_param("velocity")

# Log values
textmsg("vel=", vel)
textmsg("travel_z=", travel_z)
textmsg("wait_time=", wtime)

popup("Press continue to start building", blocking=True)

imaging_pose = get_next_pose("imaging_pose")

while True:

    # ------IMAGING POS-------
    movej(imaging_pose, v=vel)


    # --------GRAB---------
    grab_pose = get_next_pose("grab_pose")
    movej_to_pose_at_set_z(grab_pose, travel_z, vel)
    # OPEN
    $$GRIP(closed=0, speed=25, force=25)$$
    movel(grab_pose, v=vel)
    # CLOSE
    $$GRIP(closed=50, speed=25, force=25)$$
    movel_to_travel_z(travel_z, vel)


    # --------PLACE--------
    place_pose = get_next_pose("place_pose")
    movej_to_pose_at_set_z(place_pose, travel_z, vel)
    movel(place_pose, v=vel)
    # OPEN
    $$GRIP(closed=0, speed=25, force=25)$$
    movel_to_travel_z(travel_z, vel)

    if get_param("continue") < 0.5:
        break
    end

end

popup("Build finished")